name: Deploy to Ec2 With Docker
on:
  push:
    branches:
      - dev
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Build Docker Image
      working-directory: .
      run: docker build -t kimseonguk/ordersystem-backend:v2 .
    
    - name: DockerHub Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to DockerHub
      run: docker push kimseonguk/ordersystem-backend:v2

    - name: ec2 ssh login and docker run
      uses: appleboy/ssh-action@master
      with:
        host: ec2-13-125-141-255.ap-northeast-2.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
      # type docker : docker명령어가 현재 시스템에 존재하는지를 확인
      # > /dev/null : 명령어의 출력을 무시할때 사용
        script: |
          if ! type docker > /dev/null ; then
            sudo snap install docker || echo "Docker 설치에 실패했습니다."
          fi
          sudo docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

          sudo docker pull kimseonguk/ordersystem-backend:v2

          sudo docker rm -f ordersystem-backend 2>/dev/null || true

          sudo docker run -d --name ordersystem-backend -p 8080:8080 \
          -e SPRING_DATASOURCE_URL=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordersystem \
          -e SPRING_DATASOURCE_USERNAME=admin \
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e SPRING_REDIS_HOST=test4.uoizyu.ng.0001.apn2.cache.amazonaws.com \
          -e CLOUD_AWS_CREDENTIALS_ACCESS-KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e CLOUD_AWS_CREDENTIALS_SECRET-KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          kimseonguk/ordersystem-backend:v2

    - name: ec2 ssh login and docker run
      uses: appleboy/ssh-action@master
      with:
        host: ec2-43-202-47-241.ap-northeast-2.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
      # type docker : docker명령어가 현재 시스템에 존재하는지를 확인
      # > /dev/null : 명령어의 출력을 무시할때 사용
        script: |
          if ! type docker > /dev/null ; then
            sudo snap install docker || echo "Docker 설치에 실패했습니다."
          fi
          sudo docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

          sudo docker pull kimseonguk/ordersystem-backend:v2
          sudo docker rm -f ordersystem-backend 2>/dev/null || true

          sudo docker run -d --name ordersystem-backend -p 8080:8080 \
          -e SPRING_DATASOURCE_URL=jdbc:mariadb://${{ secrets.DB_HOST }}:3306/ordersystem \
          -e SPRING_DATASOURCE_USERNAME=admin \
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e SPRING_REDIS_HOST=test4.uoizyu.ng.0001.apn2.cache.amazonaws.com \
          -e CLOUD_AWS_CREDENTIALS_ACCESS-KEY=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e CLOUD_AWS_CREDENTIALS_SECRET-KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          kimseonguk/ordersystem-backend:v2